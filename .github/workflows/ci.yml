name: CI

on:
  push:
    branches:
      - openssl1.1
  pull_request:

env:
  DOCKER_TAG: buildenv
  DOCKER_FILE_PATH: ./docker-build-env/Dockerfile

jobs:
  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build Docker Image"
        uses: ./.github/actions/build-docker
        with:
          docker_tag: ${{ env.DOCKER_TAG }}
          docker_file_path: ${{ env.DOCKER_FILE_PATH }}

      - name: "Check code format"
        run: |
          docker run --rm -u "$UID" -v "$PWD:/src:rw" -w /src ${{ env.DOCKER_TAG }} bash -c \
            './scripts/check_format.sh'

  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: ["g++", "clang++"]
        build_type: ["", "ASAN"]
        hsm_flag: ["HSM_ENABLED=ON", "HSM_ENABLED=OFF"]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build Docker Image"
        uses: ./.github/actions/build-docker
        with:
          docker_tag: ${{ env.DOCKER_TAG }}
          docker_file_path: ${{ env.DOCKER_FILE_PATH }}

      - name: "Build MoCOCrW"
        run: |
          mkdir build
          docker run --rm -e SOFTHSM2_CONF='/usr/share/softhsm/softhsm2.conf' -u "$UID":softhsm -v "$PWD:/src:rw" -w /src/build ${{ env.DOCKER_TAG }} bash -c \
            'cmake \
              -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -D${{ matrix.hsm_flag }} \
              -DBUILD_TESTING=True \
              -GNinja \
              /src \
            && ninja'

      - name: "Run tests"
        run: |
          docker run --rm -e SOFTHSM2_CONF='/usr/share/softhsm/softhsm2.conf' -u "$UID":softhsm -v "$PWD:/src:rw" -w /src/build ${{ env.DOCKER_TAG }} bash -c 'ctest -j $(nproc)'
