From 102d204a3071dedb8392450519d08f2678ba4ef4 Mon Sep 17 00:00:00 2001
From: Tobias Kaufmann <Tobias.KA.Kaufmann@bmw.de>
Date: Tue, 13 Dec 2022 13:21:41 +0100
Subject: [PATCH 7/8] CMakeLists.txt: Change target_compile_definition

If target_compile_definition is using PUBLIC or INTERFACE the used
compile flags are added to the cmake target installed on the host.

If multiple static libraries for the different dilithium forms are
linked the warnings shown below are emitted by the compiler.

[22/258] Building CXX object tests/unit/CMakeFiles/......
<command-line>: warning: "DILITHIUM_MODE" redefined
<command-line>: note: this is the location of the previous definition
<command-line>: warning: "DILITHIUM_MODE" redefined
<command-line>: note: this is the location of the previous definition

These warning can be omitted when the compile definitions are set to
PRIVATE.
---
 ref/CMakeLists.txt | 29 +++++++++++++++++++++++------
 1 file changed, 23 insertions(+), 6 deletions(-)

diff --git a/ref/CMakeLists.txt b/ref/CMakeLists.txt
index 72a69d7..e3c23b9 100644
--- a/ref/CMakeLists.txt
+++ b/ref/CMakeLists.txt
@@ -33,8 +33,8 @@ add_library(aes256ctr_ref STATIC ${AES256CTR_SRCS})
 # Dilithium 2
 add_library(dilithium2_ref STATIC ${DILITHIUM_FIPS202_SRCS})
 add_library(dilithium2aes_ref STATIC ${DILITHIUM_AES_SRCS})
-target_compile_definitions(dilithium2_ref PUBLIC DILITHIUM_MODE=2)
-target_compile_definitions(dilithium2aes_ref PUBLIC DILITHIUM_MODE=2 DILITHIUM_USE_AES)
+target_compile_definitions(dilithium2_ref PRIVATE DILITHIUM_MODE=2)
+target_compile_definitions(dilithium2aes_ref PRIVATE DILITHIUM_MODE=2 DILITHIUM_USE_AES)
 target_link_libraries(dilithium2_ref INTERFACE fips202_ref)
 target_link_libraries(dilithium2aes_ref INTERFACE fips202_ref aes256ctr_ref)
 
@@ -44,6 +44,11 @@ if(BUILD_TESTING)
   add_executable(test_dilithium2aes_ref ${TEST_DILITHIUM_SRCS})
   add_executable(test_vectors2aes_ref ${TEST_VECTORS_SRCS})
 
+  target_compile_definitions(test_dilithium2_ref PRIVATE DILITHIUM_MODE=2)
+  target_compile_definitions(test_vectors2_ref PRIVATE DILITHIUM_MODE=2)
+  target_compile_definitions(test_dilithium2aes_ref PRIVATE DILITHIUM_MODE=2 DILITHIUM_USE_AES)
+  target_compile_definitions(test_vectors2aes_ref PRIVATE DILITHIUM_MODE=2 DILITHIUM_USE_AES)
+
   target_link_libraries(test_dilithium2_ref dilithium2_ref)
   target_link_libraries(test_vectors2_ref dilithium2_ref)
   target_link_libraries(test_dilithium2aes_ref dilithium2aes_ref)
@@ -56,8 +61,8 @@ endif()
 # Dilithium 3
 add_library(dilithium3_ref STATIC ${DILITHIUM_FIPS202_SRCS})
 add_library(dilithium3aes_ref STATIC ${DILITHIUM_AES_SRCS})
-target_compile_definitions(dilithium3_ref PUBLIC DILITHIUM_MODE=3)
-target_compile_definitions(dilithium3aes_ref PUBLIC DILITHIUM_MODE=3 DILITHIUM_USE_AES)
+target_compile_definitions(dilithium3_ref PRIVATE DILITHIUM_MODE=3)
+target_compile_definitions(dilithium3aes_ref PRIVATE DILITHIUM_MODE=3 DILITHIUM_USE_AES)
 target_link_libraries(dilithium3_ref INTERFACE fips202_ref)
 target_link_libraries(dilithium3aes_ref INTERFACE fips202_ref aes256ctr_ref)
 
@@ -66,6 +71,12 @@ if(BUILD_TESTING)
   add_executable(test_vectors3_ref ${TEST_VECTORS_SRCS})
   add_executable(test_dilithium3aes_ref ${TEST_DILITHIUM_SRCS})
   add_executable(test_vectors3aes_ref ${TEST_VECTORS_SRCS})
+
+  target_compile_definitions(test_dilithium3_ref PRIVATE DILITHIUM_MODE=3)
+  target_compile_definitions(test_vectors3_ref PRIVATE DILITHIUM_MODE=3)
+  target_compile_definitions(test_dilithium3aes_ref PRIVATE DILITHIUM_MODE=3 DILITHIUM_USE_AES)
+  target_compile_definitions(test_vectors3aes_ref PRIVATE DILITHIUM_MODE=3 DILITHIUM_USE_AES)
+
   target_link_libraries(test_dilithium3_ref dilithium3_ref)
   target_link_libraries(test_vectors3_ref dilithium3_ref)
   target_link_libraries(test_dilithium3aes_ref dilithium3aes_ref)
@@ -77,8 +88,8 @@ endif()
 # Dilithium 5
 add_library(dilithium5_ref STATIC ${DILITHIUM_FIPS202_SRCS})
 add_library(dilithium5aes_ref STATIC ${DILITHIUM_AES_SRCS})
-target_compile_definitions(dilithium5_ref PUBLIC DILITHIUM_MODE=5)
-target_compile_definitions(dilithium5aes_ref PUBLIC DILITHIUM_MODE=5 DILITHIUM_USE_AES)
+target_compile_definitions(dilithium5_ref PRIVATE DILITHIUM_MODE=5)
+target_compile_definitions(dilithium5aes_ref PRIVATE DILITHIUM_MODE=5 DILITHIUM_USE_AES)
 target_link_libraries(dilithium5_ref INTERFACE fips202_ref)
 target_link_libraries(dilithium5aes_ref INTERFACE fips202_ref aes256ctr_ref)
 
@@ -88,6 +99,12 @@ if(BUILD_TESTING)
   add_executable(test_vectors5_ref ${TEST_VECTORS_SRCS})
   add_executable(test_dilithium5aes_ref ${TEST_DILITHIUM_SRCS})
   add_executable(test_vectors5aes_ref ${TEST_VECTORS_SRCS})
+
+  target_compile_definitions(test_dilithium5_ref PRIVATE DILITHIUM_MODE=5)
+  target_compile_definitions(test_vectors5_ref PRIVATE DILITHIUM_MODE=5)
+  target_compile_definitions(test_dilithium5aes_ref PRIVATE DILITHIUM_MODE=5 DILITHIUM_USE_AES)
+  target_compile_definitions(test_vectors5aes_ref PRIVATE DILITHIUM_MODE=5 DILITHIUM_USE_AES)
+
   target_link_libraries(test_dilithium5_ref dilithium5_ref)
   target_link_libraries(test_vectors5_ref dilithium5_ref)
   target_link_libraries(test_dilithium5aes_ref dilithium5aes_ref)
-- 
2.38.1

